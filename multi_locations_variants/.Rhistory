location <- rep(1:2,each = data$n_t)
t = seq(0,data$n_t-1)
plot(t,data$foi[1,],type = 'l',lty=2,lwd=2, col='blue3',ylim = c(0,.15))
for(i in 2:data$location){
lines(t,data$foi[2,],lty=2,lwd=2, col='red3')
}
f <- which(location == 1)
lines(t,foi_sum[1,f],type = 'l', col='blue3',ylim = c(0,0.15))
polygon(c(t,rev(t)),
c(foi_sum[2,f],rev(foi_sum[3,f])),border =NA,col=rgb(0,0,1,.1))
for(i in 2:data$location){
f <- which(location ==i)
lines(t,foi_sum[1,f],type = 'l', col='red3')
polygon(c(t,rev(t)),
c(foi_sum[2,f],rev(foi_sum[3,f])),border =NA,col=rgb(1,0,0,.1))
}
# pred <- list()
# pred[[1]] <- 1 - exp(- t(foi_l[1:100,]) %*% data$X_design2 )
# pred[[2]] <- 1 - exp(- t(foi_l[101:200,]) %*% data$X_design2 )
#
# pred_sum <- list()
# pred_sum[[1]] <- apply(pred[[1]],2,quantile,c(.5,.025,.975))
# pred_sum[[2]] <- apply(pred[[2]],2,quantile,c(.5,.025,.975))
pred_sum <- list()
pred_sum[[1]] <-  apply(samples$prev[,1,],2,quantile,c(.5,.025,.975))
pred_sum[[2]] <-  apply(samples$prev[,2,],2,quantile,c(.5,.025,.975))
# plot real
plot(data$age, data$est[[1]][,1], ylim = c(0,1),
col='blue3', type = 'l', bty = 'n')
polygon(c(data$age,rev(data$age)),
c(data$est[[1]][,2],rev(data$est[[1]][,3])),
border = NA,col=rgb(0,0,1,.2))
for(i in 2:(2)){
lines(data$age, data$est[[i]][,1], col='red3')
polygon(c(data$age,rev(data$age)),
c(data$est[[i]][,2],rev(data$est[[i]][,3])),
border = NA,col=rgb(1,0,0,.2))
}
lines(data$age,pred_sum[[1]][1,],type = 'l', col='blue3')
polygon(c(data$age,rev(data$age)),
c(pred_sum[[1]][2,],rev(pred_sum[[1]][3,])),border =NA,col=rgb(0,0,1,.1))
###
for(i in 2:2){
lines(data$age,pred_sum[[i]][1,],type = 'l', col='red3')
polygon(c(data$age,rev(data$age)),
c(pred_sum[[i]][2,],rev(pred_sum[[i]][3,])),border =NA,col=rgb(1,0,0,.1))
}
samples <- rstan::extract(fit)
data$Beta
for(i in 1:ncol(samples$beta)){
plot(samples$beta[,i], ylim = prior_b[i,])
abline(h = data$Beta[i],lty=2,col= 'red3',lwd = 2)
}
#
# foi_l <- exp( data$X_design %*% t(samples$beta) )
# foi_sum <- apply(foi_l,1,quantile,c(.5,.025,.975))
foi_sum <- apply(samples$foi_l,2,quantile,c(.5,.025,.975))
location <- rep(1:2,each = data$n_t)
t = seq(0,data$n_t-1)
plot(t,data$foi[1,],type = 'l',lty=2,lwd=2, col='blue3',ylim = c(0,.15))
for(i in 2:data$location){
lines(t,data$foi[2,],lty=2,lwd=2, col='red3')
}
f <- which(location == 1)
lines(t,foi_sum[1,f],type = 'l', col='blue3',ylim = c(0,0.15))
polygon(c(t,rev(t)),
c(foi_sum[2,f],rev(foi_sum[3,f])),border =NA,col=rgb(0,0,1,.1))
for(i in 2:data$location){
f <- which(location ==i)
lines(t,foi_sum[1,f],type = 'l', col='red3')
polygon(c(t,rev(t)),
c(foi_sum[2,f],rev(foi_sum[3,f])),border =NA,col=rgb(1,0,0,.1))
}
# pred <- list()
# pred[[1]] <- 1 - exp(- t(foi_l[1:100,]) %*% data$X_design2 )
# pred[[2]] <- 1 - exp(- t(foi_l[101:200,]) %*% data$X_design2 )
#
# pred_sum <- list()
# pred_sum[[1]] <- apply(pred[[1]],2,quantile,c(.5,.025,.975))
# pred_sum[[2]] <- apply(pred[[2]],2,quantile,c(.5,.025,.975))
pred_sum <- list()
pred_sum[[1]] <-  apply(samples$prev[,1,],2,quantile,c(.5,.025,.975))
pred_sum[[2]] <-  apply(samples$prev[,2,],2,quantile,c(.5,.025,.975))
# plot real
plot(data$age, data$est[[1]][,1], ylim = c(0,1),
col='blue3', type = 'l', bty = 'n')
polygon(c(data$age,rev(data$age)),
c(data$est[[1]][,2],rev(data$est[[1]][,3])),
border = NA,col=rgb(0,0,1,.2))
for(i in 2:(2)){
lines(data$age, data$est[[i]][,1], col='red3')
polygon(c(data$age,rev(data$age)),
c(data$est[[i]][,2],rev(data$est[[i]][,3])),
border = NA,col=rgb(1,0,0,.2))
}
lines(data$age,pred_sum[[1]][1,],type = 'l', col='blue3')
polygon(c(data$age,rev(data$age)),
c(pred_sum[[1]][2,],rev(pred_sum[[1]][3,])),border =NA,col=rgb(0,0,1,.1))
###
for(i in 2:2){
lines(data$age,pred_sum[[i]][1,],type = 'l', col='red3')
polygon(c(data$age,rev(data$age)),
c(pred_sum[[i]][2,],rev(pred_sum[[i]][3,])),border =NA,col=rgb(1,0,0,.1))
}
median(samples$lp__)
plot(samples$lp__)
# temp =samples$prev_l
temp <-  rowSums((matrix(data.list$positive,nrow =1e3 ,
ncol = 2*data.list$n_t,byrow = TRUE))*log(samples$prev_l)+
(data.list$n_sample-(matrix(data.list$positive,nrow =1e3 ,
ncol = 2*data.list$n_t,byrow = TRUE)))*log(1-samples$prev_l))
plot(temp)
foi_1 <- exp( data$X_design %*% t(data$Beta) )
data$Beta
foi_1 <- exp( data$X_design %*% t(data$Beta) )
t(data$Beta)
foi_1 <- exp( data$X_design %*% data$Beta )
pred_1 <- 1 - exp(- t(foi_1[1:100,]) %*% data$X_design2 )
pred_2 <- 1 - exp(- t(foi_1[101:200,]) %*% data$X_design2 )
plot(pred_1)
lines(pred_2)
plot(pred_1[1,])
foi_1 <- exp( data$X_design %*% data$Beta )
pred_1 <- 1 - exp(- t(foi_1[1:100,]) %*% data$X_design2 )
pred_2 <- 1 - exp(- t(foi_1[101:200,]) %*% data$X_design2 )
plot(pred_1[1,])
lines(pred_2[1,])
pred_t <- c(pred_1[1,],pred_2[1,])
plot(pred_t)
plot(pred_t)
lines(data.list$positive/data.list$n_sample)
data.list$positive
data$positive
data.list <-  list(n_t = as.integer(data$n_t),
n_l = as.integer(data$location),
n_sample = as.integer(data$sample_per_age),
n_beta = length(data$Beta),
positive = as.integer(data$positive_l),
# Y = c(t(data$foi)),
X = data$X_design,
X2 = data$X_design2,
prior_b = prior_b)
plot(pred_t)
lines(data.list$positive/data.list$n_sample)
fit <- rstan::stan(file = 'chagas_sim2_v3.stan',
data = data.list, chains=1,
init=list(list(beta = apply(prior_b,1,mean))))
# fit <- rstan::stan(file = 'chagas_sim2_v3temp.stan',
#                    data = data.list, chains=1,
#                    init=list(list(beta = apply(prior_b,1,mean))))
samples <- rstan::extract(fit)
data$Beta
for(i in 1:ncol(samples$beta)){
plot(samples$beta[,i], ylim = prior_b[i,])
abline(h = data$Beta[i],lty=2,col= 'red3',lwd = 2)
}
# a = apply(samples$foi_l,2,quantile,c(.5,.025,.975))
# plot(a[1,])
#
# a = apply(samples$prev_l,2,quantile,c(.5,.025,.975))
# plot(a[1,])
#
# b = c(apply(samples$prev[,1,],2,quantile,c(.5)),
#       apply(samples$prev[,2,],2,quantile,c(.5)))
# plot(b)
#
# c <- apply(samples$prev[,1,],2,quantile,c(.5,.025,.975))
#
median(samples$lp__)
plot(samples$lp__)
#
# foi_l <- exp( data$X_design %*% t(samples$beta) )
# foi_sum <- apply(foi_l,1,quantile,c(.5,.025,.975))
foi_sum <- apply(samples$foi_l,2,quantile,c(.5,.025,.975))
location <- rep(1:2,each = data$n_t)
t = seq(0,data$n_t-1)
plot(t,data$foi[1,],type = 'l',lty=2,lwd=2, col='blue3',ylim = c(0,.15))
for(i in 2:data$location){
lines(t,data$foi[2,],lty=2,lwd=2, col='red3')
}
f <- which(location == 1)
lines(t,foi_sum[1,f],type = 'l', col='blue3',ylim = c(0,0.15))
polygon(c(t,rev(t)),
c(foi_sum[2,f],rev(foi_sum[3,f])),border =NA,col=rgb(0,0,1,.1))
for(i in 2:data$location){
f <- which(location ==i)
lines(t,foi_sum[1,f],type = 'l', col='red3')
polygon(c(t,rev(t)),
c(foi_sum[2,f],rev(foi_sum[3,f])),border =NA,col=rgb(1,0,0,.1))
}
# pred <- list()
# pred[[1]] <- 1 - exp(- t(foi_l[1:100,]) %*% data$X_design2 )
# pred[[2]] <- 1 - exp(- t(foi_l[101:200,]) %*% data$X_design2 )
#
# pred_sum <- list()
# pred_sum[[1]] <- apply(pred[[1]],2,quantile,c(.5,.025,.975))
# pred_sum[[2]] <- apply(pred[[2]],2,quantile,c(.5,.025,.975))
pred_sum <- list()
pred_sum[[1]] <-  apply(samples$prev[,1,],2,quantile,c(.5,.025,.975))
pred_sum[[2]] <-  apply(samples$prev[,2,],2,quantile,c(.5,.025,.975))
# plot real
plot(data$age, data$est[[1]][,1], ylim = c(0,1),
col='blue3', type = 'l', bty = 'n')
polygon(c(data$age,rev(data$age)),
c(data$est[[1]][,2],rev(data$est[[1]][,3])),
border = NA,col=rgb(0,0,1,.2))
for(i in 2:(2)){
lines(data$age, data$est[[i]][,1], col='red3')
polygon(c(data$age,rev(data$age)),
c(data$est[[i]][,2],rev(data$est[[i]][,3])),
border = NA,col=rgb(1,0,0,.2))
}
lines(data$age,pred_sum[[1]][1,],type = 'l', col='blue3')
polygon(c(data$age,rev(data$age)),
c(pred_sum[[1]][2,],rev(pred_sum[[1]][3,])),border =NA,col=rgb(0,0,1,.1))
###
for(i in 2:2){
lines(data$age,pred_sum[[i]][1,],type = 'l', col='red3')
polygon(c(data$age,rev(data$age)),
c(pred_sum[[i]][2,],rev(pred_sum[[i]][3,])),border =NA,col=rgb(1,0,0,.1))
}
median(samples$lp__)
plot(samples$lp__)
# temp =samples$prev_l
temp <-  rowSums((matrix(data.list$positive,nrow =1e3 ,
ncol = 2*data.list$n_t,byrow = TRUE))*log(samples$prev_l)+
(data.list$n_sample-(matrix(data.list$positive,nrow =1e3 ,
ncol = 2*data.list$n_t,byrow = TRUE)))*log(1-samples$prev_l))
plot(temp)
foi_1 <- exp( data$X_design %*% data$Beta )
pred_1 <- 1 - exp(- t(foi_1[1:100,]) %*% data$X_design2 )
pred_2 <- 1 - exp(- t(foi_1[101:200,]) %*% data$X_design2 )
plot(pred_1[1,])
lines(pred_2[1,])
pred_t <- c(pred_1[1,],pred_2[1,])
plot(pred_t)
lines(data.list$positive/data.list$n_sample)
data.list$positive * log(pred_t) + (data.list$n_sample - data.list$positive)*log(1-pred_t)
sum(data.list$positive * log(pred_t) + (data.list$n_sample - data.list$positive)*log(1-pred_t))
foi_1 <- exp( data$X_design %*% data$Beta )
pred_1 <- 1 - exp(- t(foi_1[1:100,]) %*% data$X_design2 )
pred_2 <- 1 - exp(- t(foi_1[101:200,]) %*% data$X_design2 )
plot(pred_1[1,])
lines(pred_2[1,])
pred_t <- c(pred_1[1,],pred_2[1,])
plot(pred_t)
lines(data.list$positive/data.list$n_sample)
ll <- sum(data.list$positive * log(pred_t) + (data.list$n_sample - data.list$positive)*log(1-pred_t))
plot(temp)
abline(h = ll,lty = 2, lwd=2, col = 'red3')
# data {
#   int<lower=0> n_t;
#   int<lower=0> n_l;
#   int<lower=0> n_sample;
#   int<lower=0> n_beta;
#   int positive[n_t*n_l];
#   matrix [n_t*n_l,n_beta] X;
#   matrix [n_t,n_t] X2;
# }
# prior_b <- matrix(c(-3.2,-2.8,-2.5,-2.1,-.0015,-.0005),
#                   nrow = length(data$Beta), ncol = 2, byrow = TRUE)
prior_b <- matrix(c(-3.2,-2.8,-2.5,-2.1,-1,0),
nrow = length(data$Beta), ncol = 2, byrow = TRUE)
data.list <-  list(n_t = as.integer(data$n_t),
n_l = as.integer(data$location),
n_sample = as.integer(data$sample_per_age),
n_beta = length(data$Beta),
positive = as.integer(data$positive_l),
# Y = c(t(data$foi)),
X = data$X_design,
X2 = data$X_design2,
prior_b = prior_b)
# yy <- X$positive/X$n
# summary(lm(yy ~  X$age))
fit <- rstan::stan(file = 'chagas_sim2_v3.stan',
data = data.list, chains=1,
init=list(list(beta = apply(prior_b,1,mean))))
# fit <- rstan::stan(file = 'chagas_sim2_v3temp.stan',
#                    data = data.list, chains=1,
#                    init=list(list(beta = apply(prior_b,1,mean))))
samples <- rstan::extract(fit)
data$Beta
for(i in 1:ncol(samples$beta)){
plot(samples$beta[,i], ylim = prior_b[i,])
abline(h = data$Beta[i],lty=2,col= 'red3',lwd = 2)
}
# data {
#   int<lower=0> n_t;
#   int<lower=0> n_l;
#   int<lower=0> n_sample;
#   int<lower=0> n_beta;
#   int positive[n_t*n_l];
#   matrix [n_t*n_l,n_beta] X;
#   matrix [n_t,n_t] X2;
# }
# prior_b <- matrix(c(-3.2,-2.8,-2.5,-2.1,-.0015,-.0005),
#                   nrow = length(data$Beta), ncol = 2, byrow = TRUE)
prior_b <- matrix(c(-3.2,-2.8,-2.5,-2.1,-1,1),
nrow = length(data$Beta), ncol = 2, byrow = TRUE)
data.list <-  list(n_t = as.integer(data$n_t),
n_l = as.integer(data$location),
n_sample = as.integer(data$sample_per_age),
n_beta = length(data$Beta),
positive = as.integer(data$positive_l),
# Y = c(t(data$foi)),
X = data$X_design,
X2 = data$X_design2,
prior_b = prior_b)
# yy <- X$positive/X$n
# summary(lm(yy ~  X$age))
fit <- rstan::stan(file = 'chagas_sim2_v3.stan',
data = data.list, chains=1,
init=list(list(beta = apply(prior_b,1,mean))))
# fit <- rstan::stan(file = 'chagas_sim2_v3temp.stan',
#                    data = data.list, chains=1,
#                    init=list(list(beta = apply(prior_b,1,mean))))
samples <- rstan::extract(fit)
data$Beta
for(i in 1:ncol(samples$beta)){
plot(samples$beta[,i], ylim = prior_b[i,])
abline(h = data$Beta[i],lty=2,col= 'red3',lwd = 2)
}
# a = apply(samples$foi_l,2,quantile,c(.5,.025,.975))
# plot(a[1,])
#
# a = apply(samples$prev_l,2,quantile,c(.5,.025,.975))
# plot(a[1,])
#
# b = c(apply(samples$prev[,1,],2,quantile,c(.5)),
#       apply(samples$prev[,2,],2,quantile,c(.5)))
# plot(b)
#
# c <- apply(samples$prev[,1,],2,quantile,c(.5,.025,.975))
#
median(samples$lp__)
plot(samples$lp__)
#
# foi_l <- exp( data$X_design %*% t(samples$beta) )
# foi_sum <- apply(foi_l,1,quantile,c(.5,.025,.975))
foi_sum <- apply(samples$foi_l,2,quantile,c(.5,.025,.975))
location <- rep(1:2,each = data$n_t)
t = seq(0,data$n_t-1)
plot(t,data$foi[1,],type = 'l',lty=2,lwd=2, col='blue3',ylim = c(0,.15))
for(i in 2:data$location){
lines(t,data$foi[2,],lty=2,lwd=2, col='red3')
}
f <- which(location == 1)
lines(t,foi_sum[1,f],type = 'l', col='blue3',ylim = c(0,0.15))
polygon(c(t,rev(t)),
c(foi_sum[2,f],rev(foi_sum[3,f])),border =NA,col=rgb(0,0,1,.1))
for(i in 2:data$location){
f <- which(location ==i)
lines(t,foi_sum[1,f],type = 'l', col='red3')
polygon(c(t,rev(t)),
c(foi_sum[2,f],rev(foi_sum[3,f])),border =NA,col=rgb(1,0,0,.1))
}
# prior_b <- matrix(c(-3.2,-2.8,-2.5,-2.1,-.0015,-.0005),
#                   nrow = length(data$Beta), ncol = 2, byrow = TRUE)
log(.1)
# prior_b <- matrix(c(-3.2,-2.8,-2.5,-2.1,-.0015,-.0005),
#                   nrow = length(data$Beta), ncol = 2, byrow = TRUE)
log(1e-6)
# prior_b <- matrix(c(-3.2,-2.8,-2.5,-2.1,-.0015,-.0005),
#                   nrow = length(data$Beta), ncol = 2, byrow = TRUE)
log(1)
log(1e-10),log(1)
prior_b <- matrix(c(log(1e-10),log(1),
log(1e-10),log(1),
-1,1),
nrow = length(data$Beta), ncol = 2, byrow = TRUE)
prior_b
# data {
#   int<lower=0> n_t;
#   int<lower=0> n_l;
#   int<lower=0> n_sample;
#   int<lower=0> n_beta;
#   int positive[n_t*n_l];
#   matrix [n_t*n_l,n_beta] X;
#   matrix [n_t,n_t] X2;
# }
# prior_b <- matrix(c(-3.2,-2.8,-2.5,-2.1,-.0015,-.0005),
#                   nrow = length(data$Beta), ncol = 2, byrow = TRUE)
log(1)
prior_b <- matrix(c(log(1e-10),log(1),
log(1e-10),log(1),
-1,1),
nrow = length(data$Beta), ncol = 2, byrow = TRUE)
data.list <-  list(n_t = as.integer(data$n_t),
n_l = as.integer(data$location),
n_sample = as.integer(data$sample_per_age),
n_beta = length(data$Beta),
positive = as.integer(data$positive_l),
# Y = c(t(data$foi)),
X = data$X_design,
X2 = data$X_design2,
prior_b = prior_b)
# yy <- X$positive/X$n
# summary(lm(yy ~  X$age))
fit <- rstan::stan(file = 'chagas_sim2_v3.stan',
data = data.list, chains=1,
init=list(list(beta = apply(prior_b,1,mean))))
# fit <- rstan::stan(file = 'chagas_sim2_v3temp.stan',
#                    data = data.list, chains=1,
#                    init=list(list(beta = apply(prior_b,1,mean))))
samples <- rstan::extract(fit)
data$Beta
for(i in 1:ncol(samples$beta)){
plot(samples$beta[,i], ylim = prior_b[i,])
abline(h = data$Beta[i],lty=2,col= 'red3',lwd = 2)
}
# a = apply(samples$foi_l,2,quantile,c(.5,.025,.975))
# plot(a[1,])
#
# a = apply(samples$prev_l,2,quantile,c(.5,.025,.975))
# plot(a[1,])
#
# b = c(apply(samples$prev[,1,],2,quantile,c(.5)),
#       apply(samples$prev[,2,],2,quantile,c(.5)))
# plot(b)
#
# c <- apply(samples$prev[,1,],2,quantile,c(.5,.025,.975))
#
median(samples$lp__)
plot(samples$lp__)
#
# foi_l <- exp( data$X_design %*% t(samples$beta) )
# foi_sum <- apply(foi_l,1,quantile,c(.5,.025,.975))
foi_sum <- apply(samples$foi_l,2,quantile,c(.5,.025,.975))
location <- rep(1:2,each = data$n_t)
t = seq(0,data$n_t-1)
plot(t,data$foi[1,],type = 'l',lty=2,lwd=2, col='blue3',ylim = c(0,.15))
for(i in 2:data$location){
lines(t,data$foi[2,],lty=2,lwd=2, col='red3')
}
f <- which(location == 1)
lines(t,foi_sum[1,f],type = 'l', col='blue3',ylim = c(0,0.15))
polygon(c(t,rev(t)),
c(foi_sum[2,f],rev(foi_sum[3,f])),border =NA,col=rgb(0,0,1,.1))
for(i in 2:data$location){
f <- which(location ==i)
lines(t,foi_sum[1,f],type = 'l', col='red3')
polygon(c(t,rev(t)),
c(foi_sum[2,f],rev(foi_sum[3,f])),border =NA,col=rgb(1,0,0,.1))
}
# pred <- list()
# pred[[1]] <- 1 - exp(- t(foi_l[1:100,]) %*% data$X_design2 )
# pred[[2]] <- 1 - exp(- t(foi_l[101:200,]) %*% data$X_design2 )
#
# pred_sum <- list()
# pred_sum[[1]] <- apply(pred[[1]],2,quantile,c(.5,.025,.975))
# pred_sum[[2]] <- apply(pred[[2]],2,quantile,c(.5,.025,.975))
pred_sum <- list()
pred_sum[[1]] <-  apply(samples$prev[,1,],2,quantile,c(.5,.025,.975))
pred_sum[[2]] <-  apply(samples$prev[,2,],2,quantile,c(.5,.025,.975))
# plot real
plot(data$age, data$est[[1]][,1], ylim = c(0,1),
col='blue3', type = 'l', bty = 'n')
polygon(c(data$age,rev(data$age)),
c(data$est[[1]][,2],rev(data$est[[1]][,3])),
border = NA,col=rgb(0,0,1,.2))
for(i in 2:(2)){
lines(data$age, data$est[[i]][,1], col='red3')
polygon(c(data$age,rev(data$age)),
c(data$est[[i]][,2],rev(data$est[[i]][,3])),
border = NA,col=rgb(1,0,0,.2))
}
lines(data$age,pred_sum[[1]][1,],type = 'l', col='blue3')
polygon(c(data$age,rev(data$age)),
c(pred_sum[[1]][2,],rev(pred_sum[[1]][3,])),border =NA,col=rgb(0,0,1,.1))
###
for(i in 2:2){
lines(data$age,pred_sum[[i]][1,],type = 'l', col='red3')
polygon(c(data$age,rev(data$age)),
c(pred_sum[[i]][2,],rev(pred_sum[[i]][3,])),border =NA,col=rgb(1,0,0,.1))
}
# pred <- list()
# pred[[1]] <- 1 - exp(- t(foi_l[1:100,]) %*% data$X_design2 )
# pred[[2]] <- 1 - exp(- t(foi_l[101:200,]) %*% data$X_design2 )
#
# pred_sum <- list()
# pred_sum[[1]] <- apply(pred[[1]],2,quantile,c(.5,.025,.975))
# pred_sum[[2]] <- apply(pred[[2]],2,quantile,c(.5,.025,.975))
pred_sum <- list()
pred_sum[[1]] <-  apply(samples$prev[,1,],2,quantile,c(.5,.025,.975))
pred_sum[[2]] <-  apply(samples$prev[,2,],2,quantile,c(.5,.025,.975))
# plot real
plot(data$age, data$est[[1]][,1], ylim = c(0,1),
col='blue3', type = 'l', bty = 'n')
polygon(c(data$age,rev(data$age)),
c(data$est[[1]][,2],rev(data$est[[1]][,3])),
border = NA,col=rgb(0,0,1,.05))
for(i in 2:(2)){
lines(data$age, data$est[[i]][,1], col='red3')
polygon(c(data$age,rev(data$age)),
c(data$est[[i]][,2],rev(data$est[[i]][,3])),
border = NA,col=rgb(1,0,0,.05))
}
lines(data$age,pred_sum[[1]][1,],type = 'l', col='blue3')
polygon(c(data$age,rev(data$age)),
c(pred_sum[[1]][2,],rev(pred_sum[[1]][3,])),border =NA,col=rgb(0,0,1,.2))
###
for(i in 2:2){
lines(data$age,pred_sum[[i]][1,],type = 'l', col='red3')
polygon(c(data$age,rev(data$age)),
c(pred_sum[[i]][2,],rev(pred_sum[[i]][3,])),border =NA,col=rgb(1,0,0,.2))
}
apply(samples$beta,2,quantile,c(.5,.025,.975))
getwd()
8*3+9.5*2
11.2*3+13.3*2
81.7*2+68.8*3
setwd("~/GitHub/epiestims/multi_locations_variants")
