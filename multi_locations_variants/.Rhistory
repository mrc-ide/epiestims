x_epi_end <- data$weekly_Rt_EpiEstim[[1]]$R$t_end
x_epi_mid <- (x_epi_start + x_epi_end)/2
for (i in 1:(n_location)){
# Plot weekly EpiEstan
col <- 'red3'
plot(x_epi_start, sum_Rt[[i]][1,],
type = 'l',col = col,
ylim = c(0,4), bty='none',
xlab = '',ylab = 'R_t',
main = names(target)[i])
polygon(c(x_epi_start,rev(x_epi_start)),
c(sum_Rt[[i]][2,],rev(sum_Rt[[i]][3,])),
border = NA, col = scales::alpha(col, 0.3))
# end of time window
col <- 'gold'
lines(x_epi_end, sum_Rt[[i]][1,],
type = 'l', col = col)
polygon(c(x_epi_end,rev(x_epi_end)),
c(sum_Rt[[i]][2,],rev(sum_Rt[[i]][3,])),
border = NA, col = scales::alpha(col, 0.3))
# mid of time window
col <- 'orange'
lines(x_epi_mid, sum_Rt[[i]][1,],
type = 'l', col = col)
polygon(c(x_epi_mid,rev(x_epi_mid)),
c(sum_Rt[[i]][2,],rev(sum_Rt[[i]][3,])),
border = NA, col = scales::alpha(col, 0.3))
abline(h = 1, col = 'red3', lty = 2)
### Plot target
lines(1:length(data$target[[i]]), data$target[[i]],
lty = 2,col = 'black')
if(i == 1) {
legend('topright',
c('target',
'Weekly EpiEstim (start)','Weekly EpiEstim (mid)','Weekly EpiEstim (end)'),
lty = c(2, 1, 1, 1, 1),
bty = 'n', col= c('black','red3', 'orange', 'gold'))
}
}
names(target)
names(data$target)
par(mfrow = c(2, 2))
x_epi_start <- data$weekly_Rt_EpiEstim[[1]]$R$t_start
x_epi_end <- data$weekly_Rt_EpiEstim[[1]]$R$t_end
x_epi_mid <- (x_epi_start + x_epi_end)/2
for (i in 1:(n_location)){
# Plot weekly EpiEstan
col <- 'red3'
plot(x_epi_start, sum_Rt[[i]][1,],
type = 'l',col = col,
ylim = c(0,4), bty='none',
xlab = '',ylab = 'R_t',
main = names(data$target)[i])
polygon(c(x_epi_start,rev(x_epi_start)),
c(sum_Rt[[i]][2,],rev(sum_Rt[[i]][3,])),
border = NA, col = scales::alpha(col, 0.3))
# end of time window
col <- 'gold'
lines(x_epi_end, sum_Rt[[i]][1,],
type = 'l', col = col)
polygon(c(x_epi_end,rev(x_epi_end)),
c(sum_Rt[[i]][2,],rev(sum_Rt[[i]][3,])),
border = NA, col = scales::alpha(col, 0.3))
# mid of time window
col <- 'orange'
lines(x_epi_mid, sum_Rt[[i]][1,],
type = 'l', col = col)
polygon(c(x_epi_mid,rev(x_epi_mid)),
c(sum_Rt[[i]][2,],rev(sum_Rt[[i]][3,])),
border = NA, col = scales::alpha(col, 0.3))
abline(h = 1, col = 'red3', lty = 2)
### Plot target
lines(1:length(data$target[[i]]), data$target[[i]],
lty = 2,col = 'black')
if(i == 1) {
legend('topright',
c('target',
'Weekly EpiEstim (start)','Weekly EpiEstim (mid)','Weekly EpiEstim (end)'),
lty = c(2, 1, 1, 1, 1),
bty = 'n', col= c('black','red3', 'orange', 'gold'))
}
}
par(mfrow = c(2, 2))
x_epi_start <- data$weekly_Rt_EpiEstim[[1]]$R$t_start
x_epi_end <- data$weekly_Rt_EpiEstim[[1]]$R$t_end
x_epi_mid <- (x_epi_start + x_epi_end)/2
for (i in 1:(n_location)){
# Plot weekly EpiEstan
col <- 'red3'
plot(x_epi_start, sum_Rt[[i]][1,],
type = 'l',col = col,
ylim = c(0,4), bty='none',
xlab = '',ylab = 'R_t',
main = names(data$target)[i])
polygon(c(x_epi_start,rev(x_epi_start)),
c(sum_Rt[[i]][2,],rev(sum_Rt[[i]][3,])),
border = NA, col = scales::alpha(col, 0.3))
# end of time window
col <- 'gold'
lines(x_epi_end, sum_Rt[[i]][1,],
type = 'l', col = col)
polygon(c(x_epi_end,rev(x_epi_end)),
c(sum_Rt[[i]][2,],rev(sum_Rt[[i]][3,])),
border = NA, col = scales::alpha(col, 0.3))
# mid of time window
col <- 'orange'
lines(x_epi_mid, sum_Rt[[i]][1,],
type = 'l', col = col)
polygon(c(x_epi_mid,rev(x_epi_mid)),
c(sum_Rt[[i]][2,],rev(sum_Rt[[i]][3,])),
border = NA, col = scales::alpha(col, 0.3))
abline(h = 1, col = 'red3', lty = 2)
### Plot target
lines(1:length(data$target[[i]]), data$target[[i]],
lty = 2,col = 'black')
if(i == 1) {
legend('topright',
c('target',
'Weekly EpiEstim (start)','Weekly EpiEstim (mid)','Weekly EpiEstim (end)'),
lty = c(2, 1, 1, 1, 1),
bty = 'n', col= c('black','red3', 'orange', 'gold'))
}
}
par(mfrow = c(2, 2))
x_epi_start <- data$weekly_Rt_EpiEstim[[1]]$R$t_start
x_epi_end <- data$weekly_Rt_EpiEstim[[1]]$R$t_end
x_epi_mid <- (x_epi_start + x_epi_end)/2
for (i in 1:(n_location)){
# Plot weekly EpiEstan
# mid of time window
col <- 'orange'
plot(x_epi_mid, sum_Rt[[i]][1,],
type = 'l',col = col,
ylim = c(0,4), bty='none',
xlab = '',ylab = 'R_t',
main = names(data$target)[i])
polygon(c(x_epi_mid,rev(x_epi_mid)),
c(sum_Rt[[i]][2,],rev(sum_Rt[[i]][3,])),
border = NA, col = scales::alpha(col, 0.3))
# mid of time window - EpiEstim
col <- 'red3'
lines(x_epi_mid, data$weekly_Rt_EpiEstim[[i]]$R$`Median(R)`,
type = 'l', col = col)
polygon(c(x_epi_mid,rev(x_epi_mid)),
c(data$weekly_Rt_EpiEstim[[i]]$R$`Quantile.0.025(R)`,
rev(data$weekly_Rt_EpiEstim[[i]]$R$`Quantile.0.975(R)`)),
border = NA, col = scales::alpha(col, 0.3))
abline(h = 1, col = 'red3', lty = 2)
### Plot target
lines(1:length(data$target[[i]]), data$target[[i]],
lty = 2,col = 'black')
if(i == 1) {
legend('topright',
c('target',
'Weekly EpiEstan (mid)','Weekly EpiEstim (mid)'),
lty = c(2, 1, 1, 1, 1),
bty = 'n', col= c('black', 'orange','red3'))
}
}
as.integer(dim(mI)[2])
# prior
param_Rt <- data.frame(matrix(NA,as.integer(dim(mI)[2]),as.integer(dim(mI)[3]))
)
View(param_Rt)
# prior
param_Rt <- data.frame(matrix(NA,as.integer(dim(mI)[2]),n_location)))
# prior
param_Rt <- data.frame(matrix(NA,as.integer(dim(mI)[2]),n_location))
# prior
param_Rt <- list(mean = data.frame(matrix(NA,as.integer(dim(mI)[2]),n_location)),
std = data.frame(matrix(NA,as.integer(dim(mI)[2]),n_location)))
data$mean_prior
data$mean_prior
epitrix::gamma_mucv2shapescale(mu = data$mean_prior,
cv = data$std_prior/data$mean_prior)
epitrix::gamma_mucv2shapescale(mu = c(2,2),
cv = c(2,2)/c(2,2))
data$weekly_Rt_EpiEstim[[i]]$R$`Mean(R)`
# prior
param_Rt <- list(mean = data.frame(matrix(NA,as.integer(dim(mI)[2]),n_location)),
std = data.frame(matrix(NA,as.integer(dim(mI)[2]),n_location)),
shape = data.frame(matrix(NA,as.integer(dim(mI)[2]),n_location)),
scale = data.frame(matrix(NA,as.integer(dim(mI)[2]),n_location)))
temp <- epitrix::gamma_mucv2shapescale(mu = data$weekly_Rt_EpiEstim[[i]]$R$`Mean(R)`,
cv = data$weekly_Rt_EpiEstim[[i]]$R$`Std(R)`/
data$weekly_Rt_EpiEstim[[i]]$R$`Mean(R)`)
View(temp)
# prior
param_Rt <- list(mean = data.frame(matrix(NA,as.integer(dim(mI)[2]),n_location)),
std = data.frame(matrix(NA,as.integer(dim(mI)[2]),n_location)),
shape = data.frame(matrix(NA,as.integer(dim(mI)[2]),n_location)),
scale = data.frame(matrix(NA,as.integer(dim(mI)[2]),n_location)))
for(i in 1:n_location){
param_Rt$mean[,i] <- data$weekly_Rt_EpiEstim[[i]]$R$`Mean(R)`
param_Rt$std[,i] <- data$weekly_Rt_EpiEstim[[i]]$R$`Std(R)`
temp <- epitrix::gamma_mucv2shapescale(mu = data$weekly_Rt_EpiEstim[[i]]$R$`Mean(R)`,
cv = data$weekly_Rt_EpiEstim[[i]]$R$`Std(R)`/
data$weekly_Rt_EpiEstim[[i]]$R$`Mean(R)`)
param_Rt$shape[,i] <- temp$shape
param_Rt$scale[,i] <- temp$scale
}
## rstan file
standata <- list(nt = as.integer(dim(mI)[2]),
tw = as.integer(dim(mI)[3]),
n_location = n_location,
I = mI,
O_I = m_O_I,
U = useful,
prior_shape = param_Rt$shape,
prior_rate = 1/param_Rt$scale)
set.seed(1)
# runif(1,0,1)
library(knitr)
library(EpiEstim)
opts_chunk$set(collapse = TRUE)
opts_chunk$set(fig.path='figs/', fig.keep='high',
dev=c('png'), cache=FALSE,
tidy=FALSE, warning=FALSE, fig.show="asis"
)
data <- readRDS('EpiEstim.rds')
I <- data$I
SI_sim <- data$SI_sim
n_location <- ncol(I)
t_window <- 7
t_start <- seq(2, nrow(I)-(t_window-1))
t_end <- t_start + (t_window-1)
# preprocessed
O_I <- apply(I,2,EpiEstim::overall_infectivity, si_distr = SI_sim)
mI <- array(NA, dim = c( n_location,
length(t_start),
ncol = t_end[1] - t_start[1]+1) )
m_O_I <- mI
for(k in 1:(n_location)){
for(i in 1:dim(mI)[2]){
mI[k,i,] <- I[t_start[i]:t_end[i],k]
m_O_I[k,i,] <- O_I[t_start[i]:t_end[i],k]
}
}
useful <- (rep(1,dim(mI)[3]))
# prior
param_Rt <- epitrix::gamma_mucv2shapescale(mu = data$mean_prior,
cv = data$std_prior/data$mean_prior)
## rstan file
standata <- list(nt = as.integer(dim(mI)[2]),
tw = as.integer(dim(mI)[3]),
n_location = n_location,
I = mI,
O_I = m_O_I,
U = useful,
prior_shape = matrix(param_Rt$shape,nrow = nt, ncol = n_location),
prior_rate = 1/matrix(param_Rt$shape,nrow = nt, ncol = n_location))
set.seed(1)
# runif(1,0,1)
library(knitr)
library(EpiEstim)
opts_chunk$set(collapse = TRUE)
opts_chunk$set(fig.path='figs/', fig.keep='high',
dev=c('png'), cache=FALSE,
tidy=FALSE, warning=FALSE, fig.show="asis"
)
data <- readRDS('EpiEstim.rds')
I <- data$I
SI_sim <- data$SI_sim
n_location <- ncol(I)
t_window <- 7
t_start <- seq(2, nrow(I)-(t_window-1))
t_end <- t_start + (t_window-1)
# preprocessed
O_I <- apply(I,2,EpiEstim::overall_infectivity, si_distr = SI_sim)
mI <- array(NA, dim = c( n_location,
length(t_start),
ncol = t_end[1] - t_start[1]+1) )
m_O_I <- mI
for(k in 1:(n_location)){
for(i in 1:dim(mI)[2]){
mI[k,i,] <- I[t_start[i]:t_end[i],k]
m_O_I[k,i,] <- O_I[t_start[i]:t_end[i],k]
}
}
useful <- (rep(1,dim(mI)[3]))
# prior
param_Rt <- epitrix::gamma_mucv2shapescale(mu = data$mean_prior,
cv = data$std_prior/data$mean_prior)
## rstan file
standata <- list(nt = as.integer(dim(mI)[2]),
tw = as.integer(dim(mI)[3]),
n_location = n_location,
I = mI,
O_I = m_O_I,
U = useful,
prior_shape = matrix(param_Rt$shape,
nrow = as.integer(dim(mI)[2]),
ncol = as.integer(dim(mI)[3])),
prior_rate = 1/matrix(param_Rt$shape,
nrow = as.integer(dim(mI)[2]),
ncol = as.integer(dim(mI)[3])))
fit <- rstan::stan(file = 'Rstan/ML_NoVariant_epiestan.stan', data = standata, chain = 1)
samples <- rstan::extract(fit)
sum_Rt <- list()
for(i in 1:(n_location)){
sum_Rt[[i]] <- apply(samples$Rt[,,i],2,quantile,c(.5,.025,.975))
}
standata <- list(nt = as.integer(dim(mI)[2]),
tw = as.integer(dim(mI)[3]),
n_location = n_location,
I = mI,
O_I = m_O_I,
U = useful,
prior_shape = matrix(param_Rt$shape,
nrow = as.integer(dim(mI)[2]),
ncol = n_location),
prior_rate = 1/matrix(param_Rt$shape,
nrow = as.integer(dim(mI)[2]),
ncol = n_location))
View(standata)
fit <- rstan::stan(file = 'Rstan/ML_NoVariant_epiestan.stan', data = standata, chain = 1)
samples <- rstan::extract(fit)
sum_Rt <- list()
for(i in 1:(n_location)){
sum_Rt[[i]] <- apply(samples$Rt[,,i],2,quantile,c(.5,.025,.975))
}
par(mfrow = c(2, 2))
x_epi_start <- data$weekly_Rt_EpiEstim[[1]]$R$t_start
x_epi_end <- data$weekly_Rt_EpiEstim[[1]]$R$t_end
x_epi_mid <- (x_epi_start + x_epi_end)/2
for (i in 1:(n_location)){
# Plot weekly EpiEstan
col <- 'red3'
plot(x_epi_start, sum_Rt[[i]][1,],
type = 'l',col = col,
ylim = c(0,4), bty='none',
xlab = '',ylab = 'R_t',
main = names(data$target)[i])
polygon(c(x_epi_start,rev(x_epi_start)),
c(sum_Rt[[i]][2,],rev(sum_Rt[[i]][3,])),
border = NA, col = scales::alpha(col, 0.3))
# end of time window
col <- 'gold'
lines(x_epi_end, sum_Rt[[i]][1,],
type = 'l', col = col)
polygon(c(x_epi_end,rev(x_epi_end)),
c(sum_Rt[[i]][2,],rev(sum_Rt[[i]][3,])),
border = NA, col = scales::alpha(col, 0.3))
# mid of time window
col <- 'orange'
lines(x_epi_mid, sum_Rt[[i]][1,],
type = 'l', col = col)
polygon(c(x_epi_mid,rev(x_epi_mid)),
c(sum_Rt[[i]][2,],rev(sum_Rt[[i]][3,])),
border = NA, col = scales::alpha(col, 0.3))
abline(h = 1, col = 'red3', lty = 2)
### Plot target
lines(1:length(data$target[[i]]), data$target[[i]],
lty = 2,col = 'black')
if(i == 1) {
legend('topright',
c('target',
'Weekly EpiEstim (start)','Weekly EpiEstim (mid)','Weekly EpiEstim (end)'),
lty = c(2, 1, 1, 1, 1),
bty = 'n', col= c('black','red3', 'orange', 'gold'))
}
}
par(mfrow = c(2, 2))
x_epi_start <- data$weekly_Rt_EpiEstim[[1]]$R$t_start
x_epi_end <- data$weekly_Rt_EpiEstim[[1]]$R$t_end
x_epi_mid <- (x_epi_start + x_epi_end)/2
for (i in 1:(n_location)){
# Plot weekly EpiEstan
col <- 'red3'
plot(x_epi_start, sum_Rt[[i]][1,],
type = 'l',col = col,
ylim = c(0,4), bty='none',
xlab = '',ylab = 'R_t',
main = names(data$target)[i])
polygon(c(x_epi_start,rev(x_epi_start)),
c(sum_Rt[[i]][2,],rev(sum_Rt[[i]][3,])),
border = NA, col = scales::alpha(col, 0.3))
# end of time window
col <- 'gold'
lines(x_epi_end, sum_Rt[[i]][1,],
type = 'l', col = col)
polygon(c(x_epi_end,rev(x_epi_end)),
c(sum_Rt[[i]][2,],rev(sum_Rt[[i]][3,])),
border = NA, col = scales::alpha(col, 0.3))
# mid of time window
col <- 'orange'
lines(x_epi_mid, sum_Rt[[i]][1,],
type = 'l', col = col)
polygon(c(x_epi_mid,rev(x_epi_mid)),
c(sum_Rt[[i]][2,],rev(sum_Rt[[i]][3,])),
border = NA, col = scales::alpha(col, 0.3))
abline(h = 1, col = 'red3', lty = 2)
### Plot target
lines(1:length(data$target[[i]]), data$target[[i]],
lty = 2,col = 'black')
if(i == 1) {
legend('topright',
c('target',
'Weekly EpiEstim (start)','Weekly EpiEstim (mid)','Weekly EpiEstim (end)'),
lty = c(2, 1, 1, 1, 1),
bty = 'n', col= c('black','red3', 'orange', 'gold'))
}
}
par(mfrow = c(2, 2))
x_epi_start <- data$weekly_Rt_EpiEstim[[1]]$R$t_start
x_epi_end <- data$weekly_Rt_EpiEstim[[1]]$R$t_end
x_epi_mid <- (x_epi_start + x_epi_end)/2
for (i in 1:(n_location)){
# Plot weekly EpiEstan
col <- 'red3'
plot(x_epi_start, sum_Rt[[i]][1,],
type = 'l',col = col,
ylim = c(0,4), bty='none',
xlab = '',ylab = 'R_t',
main = names(data$target)[i])
polygon(c(x_epi_start,rev(x_epi_start)),
c(sum_Rt[[i]][2,],rev(sum_Rt[[i]][3,])),
border = NA, col = scales::alpha(col, 0.3))
# end of time window
col <- 'gold'
lines(x_epi_end, sum_Rt[[i]][1,],
type = 'l', col = col)
polygon(c(x_epi_end,rev(x_epi_end)),
c(sum_Rt[[i]][2,],rev(sum_Rt[[i]][3,])),
border = NA, col = scales::alpha(col, 0.3))
# mid of time window
col <- 'orange'
lines(x_epi_mid, sum_Rt[[i]][1,],
type = 'l', col = col)
polygon(c(x_epi_mid,rev(x_epi_mid)),
c(sum_Rt[[i]][2,],rev(sum_Rt[[i]][3,])),
border = NA, col = scales::alpha(col, 0.3))
abline(h = 1, col = 'red3', lty = 2)
### Plot target
lines(1:length(data$target[[i]]), data$target[[i]],
lty = 2,col = 'black')
if(i == 1) {
legend('topright',
c('target',
'Weekly EpiEstim (start)','Weekly EpiEstim (mid)','Weekly EpiEstim (end)'),
lty = c(2, 1, 1, 1, 1),
bty = 'n', col= c('black','red3', 'orange', 'gold'))
}
}
data <- readRDS('EpiEstim.rds')
I <- data$I
SI_sim <- data$SI_sim
set.seed(1)
# runif(1,0,1)
library(knitr)
library(EpiEstim)
opts_chunk$set(collapse = TRUE)
opts_chunk$set(fig.path='figs/', fig.keep='high',
dev=c('png'), cache=FALSE,
tidy=FALSE, warning=FALSE, fig.show="asis"
)
n_location <- ncol(I)/2
n_variant <- ncol(I)/2
t_window <- 7
t_start <- seq(2, nrow(I)-(t_window-1))
t_end <- t_start + (t_window-1)
# preprocessed
O_I <- apply(I,2,EpiEstim::overall_infectivity, si_distr = SI_sim)
mI <- array(NA, dim = c( n_location*n_variant,
length(t_start),
ncol = t_end[1] - t_start[1]+1) )
m_O_I <- mI
for(k in 1:(n_location*n_variant)){
for(i in 1:dim(mI)[2]){
mI[k,i,] <- I[t_start[i]:t_end[i],k]
m_O_I[k,i,] <- O_I[t_start[i]:t_end[i],k]
}
}
useful <- (rep(1,dim(mI)[3]))
# prior
param_Rt <- list(mean = data.frame(matrix(NA,as.integer(dim(mI)[2]),n_location)),
std = data.frame(matrix(NA,as.integer(dim(mI)[2]),n_location)),
shape = data.frame(matrix(NA,as.integer(dim(mI)[2]),n_location)),
scale = data.frame(matrix(NA,as.integer(dim(mI)[2]),n_location)))
param_beta <- matrix(NA,as.integer(dim(mI)[2]),n_location)
for(i in 1:n_location){
param_Rt$mean[,i] <- data$weekly_Rt_EpiEstim[[(i-1)*n_variant+1]]$R$`Mean(R)`
param_Rt$std[,i] <- data$weekly_Rt_EpiEstim[[(i-1)*n_variant+1]]$R$`Std(R)`
temp <- epitrix::gamma_mucv2shapescale(mu = data$weekly_Rt_EpiEstim[[(i-1)*n_variant+1]]$R$`Mean(R)`,
cv = data$weekly_Rt_EpiEstim[[(i-1)*n_variant+1]]$R$`Std(R)`/
data$weekly_Rt_EpiEstim[[(i-1)*n_variant+1]]$R$`Mean(R)`)
param_Rt$shape[,i] <- temp$shape
param_Rt$scale[,i] <- temp$scale
param_beta[,i] <- data$weekly_Rt_EpiEstim[[(i-1)*n_variant+2]]$R$`Mean(R)`/
data$weekly_Rt_EpiEstim[[(i-1)*n_variant+1]]$R$`Mean(R)`
}
prior_beta <- list(m_beta = mean(c(param_beta)), sd_beta = sd(c(param_beta)))
prior_beta <- list(prior_beta,
shsc = epitrix::gamma_mucv2shapescale(mu = prior_beta$m_beta,
cv =prior_beta$sd_beta/
prior_beta$m_beta) )
# hist(c(param_beta))
plot(seq(0,3,length.out = 1e2),dgamma(x = seq(0,3,length.out = 1e2),
shape = prior_beta$shsc$shape,
scale = prior_beta$shsc$scale ))
## rstan file
standata <- list(nt = as.integer(dim(mI)[2]),
tw = as.integer(dim(mI)[3]),
n_location = n_location,
n_variant = n_variant,
I = mI,
O_I = m_O_I,
U = useful,
prior_shape = param_Rt$shape,
prior_rate = 1/param_Rt$scale,
prior_beta = c(prior_beta$shsc$shape,1/prior_beta$shsc$scale))
fit <- rstan::stan(file = 'Rstan/ML_Variant_epiestan.stan', data = standata, chain = 1)
